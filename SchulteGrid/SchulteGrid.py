# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'shuerteV2.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QInputDialog, QMessageBox,QPushButton
from PyQt5.QtCore import QThread, pyqtSignal, QTimer
import random
import time


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(801, 716)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.gridLayoutWidget.setGeometry(QtCore.QRect(100, 40, 591, 521))
        self.gridLayoutWidget.setObjectName("gridLayoutWidget")
        self.gridLayout = QtWidgets.QGridLayout(self.gridLayoutWidget)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setObjectName("gridLayout")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(295, 600, 201, 41))
        self.pushButton.setObjectName("pushButton")
        # self.label = QtWidgets.QLabel(self.centralwidget)
        # self.label.setGeometry(QtCore.QRect(305, 576, 81, 20))
        # self.label.setObjectName("label")
        self.timelb = QtWidgets.QLabel(self.centralwidget)
        self.timelb.setGeometry(QtCore.QRect(330, 580, 120, 12))
        self.timelb.setText("")
        self.timelb.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.timelb.setObjectName("timelb")
        # self.label_3 = QtWidgets.QLabel(self.centralwidget)
        # self.label_3.setGeometry(QtCore.QRect(470, 570, 91, 31))
        # self.label_3.setObjectName("label_3")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 801, 23))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

# 用户代码开始 --------------------------------------------------------------------------------------------------------

        # 设置游戏难度（多少行）
        self.pushButtonNumber, flag = QInputDialog.getInt(MainWindow, "游戏难度选择", "请输入行数：", 3, 1, 16)

        # 根据用户输入生成列表，并使内容随机排列
        global s
        s = self.pushButtonNumber
        ps = [i for i in range(1, s ** 2 + 1)]
        random.shuffle(ps)
        # 一维数组转二维数组
        xl = [ps[i:i + s] for i in range(0, len(ps), s)]
        # print('xl',xl)
        # 依据上面列表生成按钮
        for i in range(s):
            for j in range(s):
                # 生成PushButton
                pp = str(xl[i][j])
                self.gridLayout.addWidget(QtWidgets.QPushButton(pp), i, j)

        # for i in range(s):
        #     for j in range(s):
        #         self.gridLayout.itemAtPosition(i,j).widget().resize(100,20)

        #  从大到小依次获取每个数字的索引值，存入列表
        self.lsw = []
        for i in range(s ** 2):
            for j in range(s):
                for k in range(s):
                    if xl[j][k] == i + 1:
                        self.lsw.append((j, k))
        # print('lsw',self.lsw)

        self.lc = list(self.lsw)
        self.q = 0
        # print('lc',self.lswc)
        self.num = 1
        # self.c = self.lsw[0]

        # 执行 数字 的PushButton按钮点击事件
        # c = self.lsw.pop(0)
        # self.gridLayout.itemAtPosition(c[0],c[1]).widget().clicked.connect(self.nb)
        # 设置按钮无法点击
        # self.gridLayout.itemAtPosition(c[0], c[1]).widget().setEnabled(False)

        # 设置 开始 按钮单击事件
        self.pushButton.clicked.connect(self.sta)

        # pyqt5自动生成代码
        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    # 单击开始按钮执行函数
    def sta(self):
        # s = 5
        print('游戏开始')
        self.t1 = time.time()
        self.timer()
        d = self.lsw.pop(0)
        # self.gridLayout.itemAtPosition(self.lc[0][0],self.lc[0][1]).widget().clicked.connect(self.nb)
        self.gridLayout.itemAtPosition(d[0], d[1]).widget().clicked.connect(self.nb)
        self.pushButton.setEnabled(False)

    # 单击数字按钮执行函数
    def nb(self):
        if len(self.lsw) == 0:
            self.timelb.setVisible(False)
            # print('恭喜你通关了！')
            self.gridLayout.itemAtPosition(self.lc[-1][0], self.lc[-1][1]).widget().setEnabled(False)
            self.t2 = time.time()
            self.showmsg()

        self.num += 1
        a = self.lsw.pop(0)
        # print(a)
        self.gridLayout.itemAtPosition(a[0], a[1]).widget().clicked.connect(self.nb)

        # 设置已经点击的数字按钮不可点击
        if self.num == self.q + 2:
            self.gridLayout.itemAtPosition(self.lc[self.q][0], self.lc[self.q][1]).widget().setEnabled(False)
            self.q += 1

    # 通关提示函数
    def showmsg(self):
        t = self.t2 - self.t1
        tt = round(t, 2)
        # print(tt)
        QMessageBox.information(None, '恭喜', f'\n\n\t游戏通关了！\t\t\n\n\t用时：{tt}秒\n')
        MainWindow.close()

    # 定时模块
    def timer(self):
        self.curtime = 0
        self.timer = QTimer()
        self.timer.start(1000)
        self.timer.timeout.connect(self.showtime)
        # self.timer.start()

    # lable显示已用时模块
    def showtime(self):
        self.curtime += 1
        # hours = self.curtime / 3600
        # minutes_curtime = self.curtime % 3600
        # minutes = minutes_curtime / 60
        # seconds_curtime = minutes_curtime % 60
        # seconds = seconds_curtime
        # str_time = "%02d:%02d:%02d" % (hours, minutes, seconds)
        str_time = f'游戏已用时： {self.curtime} 秒'
        self.timelb.setText(str_time)


# 用户代码结束 -------------------------------------------------------------------------------------------------------

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "舒尔特方格"))
        self.pushButton.setText(_translate("MainWindow", "开始游戏"))
        # self.label.setText(_translate("MainWindow", "游戏已用时："))
        # self.label_3.setText(_translate("MainWindow", "秒"))

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())