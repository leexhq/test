# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'shuerte.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QInputDialog, QMessageBox,QPushButton
import random


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 720)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.gridLayoutWidget.setGeometry(QtCore.QRect(100, 40, 591, 521))
        self.gridLayoutWidget.setObjectName("gridLayoutWidget")
        self.gridLayout = QtWidgets.QGridLayout(self.gridLayoutWidget)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setObjectName("gridLayout")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(270, 590, 201, 41))
        self.pushButton.setObjectName("pushButton")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 23))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        # 根据用户输入生成列表，并使内容随机排列
        global s
        s=3
        ps = [i for i in range(1,s**2+1)]
        random.shuffle(ps)
        # print(ps)
        # 一维数组转二维数组
        xl = [ps[i:i+s] for i in range(0,len(ps),s)]
        print('xs',xl)
        # for x in ps:
        #     for i in range(s):
        #         xs[i].append(x)
        # print(xs)

        # 依据上面列表生成按钮
        for i in range(s):
            for j in range(s):
                # 生成PushButton
                # pp = str(ps[i+j*s])
                pp = str(xl[i][j])
                self.gridLayout.addWidget(QtWidgets.QPushButton(pp),i,j)
                # print(QPushButton(str(ps[i+j*s])))
                # print(QPushButton(str(ps[i+j*s])).text())
                # y = 1
                # if QPushButton(pp).text() == str(y):
                #     QPushButton(pp).clicked.connect(self.nb)
                #     print('333')

        global gi
        gi = 1

        self.num = 1

        # lswz = []
        self.lsw = []
        for i in range(s**2):
            for j in range(s):
                for k in range(s):
                    if xl[j][k] == i+1:
                        # lswz.append(xl[j][k])
                        self.lsw.append((j,k))
        # print('lswz',lswz)
        # print('lsw',lsw)
        # print(lsw[0][0])

        self.gridLayout.itemAtPosition(self.lsw[0][0],self.lsw[0][1]).widget().clicked.connect(self.nb)

        # for x in range(1,s**2+1):
        #     print(xs.index(str(x)))
            # lswz.append(xs.index(x))
            # print(lswz)
            # for i in range(s):
            #     for j in range(s):
            #         lswz.append(xs.index(x))
            #         print(lswz)
        # cc = 0
        # for i in range(s**2):
        #     xs = self.gridLayout.itemAt(i).widget().text()
        #     if xs == str(i+1):
        #         print(xs)

        # wzw = 0
        # for i in range(s**2):
        #     xs = self.gridLayout.itemAt(i).widget().text()
        #     wz = self.gridLayout.getItemPosition(i)
        #
        #     # print(xs)
        #     # print(wz)
        #     if xs == str(1):
        #         wzw = wz
        #         # print('xx')
        #         # print(wz)
        #         # print(self.gridLayout.itemAtPosition(wz[0],wz[1]).widget().text())
        #         # print(i)
        # self.gridLayout.itemAtPosition(wzw[0],wzw[1]).widget().clicked.connect(self.nb)
        # print('aa',wzw)
                # self.gridLayout.itemAt(i).widget().clicked.connect(self.nb)


        # print('xxx')
        # 获取列表值为1的索引值
        # sst = ps.index(1)+1
        # print(sst)
        # self.gi = 0
        # self.gridLayout.itemAt(1).widget().clicked.connect(self.nb)

        # for i in range(s**2):
        #     # print(i)
        #     # 获取每个按钮
        #     # print(self.gridLayout.itemAt(i).widget())
        #     # 获取每个按钮的值
        #     # print(self.gridLayout.itemAt(i).widget().text())
        #
        #     # 布局器中每个按钮点击事件
        #     global gi
        #     gi = i
        #     self.gridLayout.itemAt(gi).widget().clicked.connect(self.nb)

        # self.gridLayout.itemAtPosition(1,1).widget().clicked.connect(self.nb)

            # 获取自动生成按钮的位置
            # print(self.gridLayout.getItemPosition(i))
            # p = self.gridLayout.getItemPosition(i)
            # b = self.gridLayout.itemAtPosition(p)
            # print(b)

        # for i in range(s):
        #     for j in range(s):
        #         print(self.gridLayout.itemAtPosition(i,j).widget())

        #设置开始按钮单击事件
        self.pushButton.clicked.connect(self.sta)


        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.pushButton.setText(_translate("MainWindow", "Start"))

    # 单击开始按钮执行
    def sta(self):
        # s = 5
        print('开始')

    # 单击数字按钮执行

    def nb(self):
        # print(self.gridLayout.itemAt(self.gi).widget().text())
        # z = 3
        # for i in range(9):
        #     try:
        #         # if self.gridLayout.itemAt(i).widget().text() == str(self.num):
        #         if self.gridLayout.getItemPosition(lsw[0][0],lsw[0][1]).widget().text() == str(self.num):
        #             print('OK',self.num)
        #             # print(self.num)
        #             self.num += 1
        #         else:
        #             continue
        #     except:
        #         pass

        for i in range(s):
            for j in range(s):
                try:
                    # if self.gridLayout.itemAt(i).widget().text() == str(self.num):
                    if self.gridLayout.getItemPosition(self.lsw[i][0],self.lsw[j][1]).widget().text() == str(self.num):
                        print('OK',self.num)
                        # print(self.num)
                        self.num += 1
                    else:
                        continue
                except:
                    pass

        if self.num == s**2+1:
            print('恭喜你！完成游戏')

        wzww = 0
        for i in range(9):
            xs = self.gridLayout.itemAt(i).widget().text()
            wz = self.gridLayout.getItemPosition(i)
            if xs == str(self.num):
                wzww = wz
                # print('xx')
                # print(wz)
                # print(self.gridLayout.itemAtPosition(wz[0],wz[1]).widget().text())
                # print(i)
        self.gridLayout.itemAtPosition(wzww[0], wzww[1]).widget().clicked.connect(self.nb)

        # print('一二三')

    # def nnb(self,w):
    #     for i in range(s**2):
    #         if str(w) == self.gridLayout.itemAt(i).widget().text():
    #             wz = self.gridLayout.getItemPosition(i)
    #             print(i)
    #             self.gridLayout.itemAtPosition(wz[0],wz[1]).widget().clicked.connect(self.nb)


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())